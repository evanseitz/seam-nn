TODO:

- examples
    - example for figure 1 should also mention all supplementary figures associated with it (Covariance, etc.)
    - note that DeepSHAP takes about an hour for 100,000 sequences (DeepSTARR), so other methods used in examples
    - update deepstarr_local.rst to mirror most recent Colab
    - one global example using GIA coloring
    - PCA/K-means version of 'Local library to annotate all TFBSs and biophysical states
    - both:
        - put random seeds on all mut_generators and rerun
        - DeepSTARR 3-way mutation figure reproduced
            - compare to SQUID pairwise
            - repeat all slides from first SCQB presentation
                - all_maps_average_y_adaptive.png / all_maps_average_y_fixed.png
            - need section at end to dynamically understand MSM for a given cluster
        - REVO? BEAM?
        - ChromBPNet
            - Promoter
            - Enhancer with umap?
        - CLIPNET
            - PIK3R3?
        - ProCapNet (Captum?)
            - profiles
            - background
    - local:
        - Replicate global Colabs into Python scripts
        - folder name specification: e.g., "kmeans_k200" for 200 clusters
        - SpliceAI example
    - colab:
        - interactive MSM viewer
        - change one of the examples to use PCA instead of hierarchical?
        - update all colab examples: font_name='Arial Rounded MT Bold', fade_below=0.5, shade_below=0.5, width=0.9


- plotting:
    - Missing save outputs:
        - all_maps_average_y_adaptive.png / all_maps_average_y_fixed.png
    - TypeError: draw_variability_logo() got an unexpected keyword argument 'border'



- SQUID:
    - add copies of all colab tutorials (with import versions) to GitHub folder
    - plot_y_hist() in impress.py needs option to set new axvline ref_idx or None
    - handle larger pairwise matrices
    - check why global seed is the only reason x_mut can be preserved
        - add option to input pre-generated x_mut
        - add option to skip inference (y_mut = None) -> is this already in place?
    - backup SQUID Colabs on github


- CLIPNET:
    - Run on: 
        - PIK3CA: 
            - most commonly mutated proto-oncogene (mutated in 13% of cancers)
        - TERT


Documentation:
    - API figure (use squid as template)
    - Check all readthedocs pages for accuracy
    - https://pypi.org/project/seam-nn/ pictures not loading correctly? also check all text
    - show example kwargs for each attribution method in ReadTheDocs: PCA with plot_eigenvalues, etc.
    - read through and verify API in ReadTheDocs
    - add Colab copies to ReadTheDocs
    - make sure requirements and installation are consistent with setup.py
    - update all terms in the backend code to reflect those used in final manuscript (MSM --> SSM, etc.)
        - and in all examples
    - Note in readme about DeepSHAP only in examples due to conflicts in eager mode defaulted in modern Colab (TF). Also mention PyTorch
    - A graphic user interface (GUI) is available for dynamically interpretting SEAM results. The GUI can be run using the command line interface from the 'seam" folder via
        "python seam_gui.py'. The SEAM GUI requires pre-computed inputs that can be saved using the example scripts above.


- Compiler:
    - SEAM utils calls
    - Move hamming distance calculation to SEAM utils?
    - save output to self.mave
    - docstring check (readthedocs compatibility)
    - discover alphabet from mave.csv and save to self.alphabet
        - e.g., alphabet = sorted(list(set(mave['Sequence'][0:100].apply(list).sum())))
    - mave.to_csv('mave.csv', index=False)
    - remove redundant sequences (in general) and after concat with SNV/DNV; or check if it’s already in the code (or put it there in compile)
    - ensembler() to combine model folds?
    - GIA scores in Compiler


- Attributer:
    - option to use PyTorch / import Captum
    - Methods:
        - ISM:
            - error running 100,000 sequences with 16 batch size in global
                - Attribution:   0%|          | 0/6250 [00:00<?, ?it/s]GPU implementation failed with error: {{function_node __wrapped__TensorScatterUpdate_device_/job:localhost/replica:0/task:0/device:GPU:0}} Outer dimensions of indices and update must match. Indices shape: [32,1], updates shape:[1] [Op:TensorScatterUpdate] name: 
            - check if the sequence has been used anywhere else (in any other batch)... use memmap? or caching
            - once everything is fixed up, check UMAP of global AP1 library
            - automatically handle best batch_size (tf.experimental.autotune)?
                - Batch_size check against memory
            - check gpu version time per batch over batches (memory leakage?)
        - DeepSHAP
            - add old TF1 version
            - Refactor DeepSHAP code for newer TF versions
            - DeepSHAP for TF2: dinuc_shuffle, etc. in batch mode with GPUs
            - pytorch version?
            - no longer need sequence_utils.py?
            - dinuc shuffling vs training set option
        - IntGrad
            - Plot each map within a given int grad trajectory
            - Test that dinuc_shuffle is able to call the numpy version of batch_dinuc_shuffle
            - baseline_type=None for pre-generated baseline? (e.g., training set)
            - Leo's sub-batch code?


- Clusterer:
    - implement other methods from cuml.manifold?
        - tsne CPU, GPU
    - phate GPU?
    - Dendrogram plot: update cluster colors based on cut level
    - add diffusion maps code
    - reuse DM distance matrix for clustering?
    - add Louvain (or Leiden) clustering
    - hierarchical vs embedding discrepancy:
        - hierarchical doesn't take method as hyperparam: clusterer = Clusterer(attributions,gpu=gpu)
    - Does hierarchical cpu not run out of memory when gpu does? Is the memmap problematic? 
    - Error in get_cluster_labels print(f"Cut level for {n_clusters} clusters: {max_d:.3f}") --> add error message when more clusters are provided than maps


- MetaExplainer:
    - add mutual information plot to explainer?
    - JK: plot KL divergence between cluster and BG (2nd distribution) for coloring MSM?
    - Marginal delta_H to show regions of conservation
    - test plot_cluster_profiles
        - check profile plotting functionality (lines 741-753 from meta_explainer_orig.py)
            - plot individual profiles for each cluster
            - handle alpha blending for overlays
    - test enrichment logos
    - line up the MSM with the logos below them, and with the bar plot to their right (see below)
    - use marginal bar plots on the right side of the MSM figure
    - background_entropy currently only defined for 4 nucleotides; see latex equation
        - currently: background_entropy = entropy([null_rate, (1-null_rate)/3, (1-null_rate)/3, (1-null_rate)/3], base=2)
    - plot_msm() needs xtick_spacing
    - ability to plot a single row (cluster) of MSM, and given a position, view the nucleotide frequencies
    - change Blues to viridis for percent mismatch palette (recall, sns.color_palette('rocket', n_colors=100); sns.color_palette('viridis', n_colors=100)


- Identifier:
    - code to combine TFBS states based on squares in covariance matrix
        - use more complicated locus: Ohler6-m0-seq171
    - Fisher, Binomial, etc. for SNPs database
    - update readthedocs for Identifier
    - add xtick_spacing to plot_covariance_square
    - background_entropy currently only defined for 4 nucleotides
    - calculate expected effect for each cluster? (change in y-value from WT cluster)
    - fix state matrix bug (multiplier > 1?)
    - add percent mismatches table and printouts from old code
    - automate epistatic effects from state matrix


- Impress:
    - move all plotting code to impress.py?
        - plot_dendrogram
        - minimize other redundancies between functions in identifier.py and clusterer.py
    - add Bokeh plots for colab


- GUI Class:
    - GUI requires 'matplotlib==3.6.0', which is in conflict with scipy dendrogram plot
    - update for latest repository
        - new logomaker (remove old logo versions)
    - if adaptive logos not pre-generated, automatically show fixed
    - PWM bits are not correct (should be max 2, not 4)
    - MSM window: boxplots of y values in margin or separate window
    - P1: if no manifold, n/a plots on P2 and P3
    - Save a page of individual logos to figure from a given cluster (popup window with start/stop option)
    - if no points selected, clear and show warning box
    - P2: “adaptive” and “fixed”
    - P2/P3: statistics window needs correct toolbar readouts
    - P1: “First row”, “consensus”, “custom”, “None”
    - All axes: just show 0,25,50,75,100%
    - Redoing cluster folder on P1 (while hist shown on P2) results in overlapping plots on P2
    - Drop duplicates
    - Put {attribution method} (e.g., DeepSHAP) in all /clusters filenames
    - Box plots for y vs clusters in MSM margin or sub-window
    - P3 logos still vertically squished
    - Disable dark mode
    - Re-assert “Drawing order” after changing “Color Map” on P2
    - Toolbars: save with tight layout
    - Go to WT cluster (i.e., first row of ‘all clusters.csv’)
    - Check accuracy of delta H calculation (error?)
    - Plot_clusters_matches_2d_gui:
        - Impress: delta=True in GUI; alphabet; “r” (mutation rate)
    - GUI marginal window needs “Entropy difference” option
    - P2: button to save indices of encircled points (and print)
    - P2: show occupancy of encircled region in toolbar
    - GUI crash on P3 for UMAP and hierarchical logos
    - Slightly larger black points on P3 of GUI
    - MSM: option to map SEAM coordinates to new number (e.g., chr1:A-B)
    - P3: resize logo as window is made larger
    - Save mismatch table in Marginal Window of GUI; popup window showing location of saved file
    - Option to rank MSM by median y value (if pre-sort is not selected)
    - “Show boxplots” button
    - P3: up and down toggle arrows for “choose cluster”
    - P3: render and save logo on the fly (if missing)
    - Ability to switch between hierarchical cut levels on the fly
    - For public release, make sure all examples have all logos (fixed, etc.)
    - Update P3 UMAP when Custom.plt_step is changed on P2 (needs to update Predef.cluster_colors)
    - New tab to merge clusters and label them (e.g., AP-1, etc)
        - Visualize state vs. TFBS presence graph
    - Instructions to install Matplotlib==3.6 (or fix errors)
    - Write .md manual
    - inputs: linkage and dropdown: {number of clusters, cut level}
    - sort: {None, median} with tooltip
    - pop up box to view dendrogram
    - remove all old logo methods and replace with BatchLogo
    - input alphabet: DNA, RNA, Protein, Custom, Automate?
    - youtube tutorial
    - demo data (orig slides with 3-way mutation; crop and no crop)
    - inputs need to be straight from local script; i.e., no crop params in gui



- Old code:
    - speed up all processes with new backend, and add readme


- Other:
    - sampling from clusters  
    - epistasis robustness:
        - test with num_clusters = 2^4
        - instead of median:
            - smallest hamming
            - specifically shuffle region and re-compute preserved
        - view variability logo for each cluster
        - consistency across attribution methods


- Zenodo:
    - update colab downloads
    - add all downloaded files:
        - Zfp187_2626_contig8mers.txt
        - Hnf4...
        - x_mut and y_mut for PBMs
        - AP1 genomic loci


- Commands:
    - upload to pypi:
        python -m build
        twine upload --skip-existing dist/*