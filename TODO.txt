TODO:

- paper:
    - Background analysis (DeepSTARR):
        - compute backgrounds and related data for subset (or all) of test set
            - subset: stratify by prediction (50 for each quartile)
        - for a given attribution method:
            - find backgrounds that are maximally different across sequences
            - find sequences with the max difference between their cluster avg and background separated cluster avg across test set
            - cluster backgrounds into embedded space from task=0 and 1
                - possibly crop and align backgrounds before embedding
                - if that doesn't work, perform k-mer spectra analysis (Yagi's code)
        - calculate SNR: WT cluster map - WT map (could try L2 norm) for saliency --> how different are they
            - re-compute this metric to compare to other attribution methods (each also compared to saliency)
                - e.g., L2(SmoothGrad - Saliency) for Signal - Noise
                - or L2(SmoothGrad) / L2(SmoothGrad - Saliency)
                - try SmoothGrad, IntGrad, DeepSHAP, SQUID (?)
            - compare across different number of clusters: 1, 10, 25, 50, 100
        - calculate SBR (signal-to-background ratio) via (WT cluster map - BG) vs. BG
            - could also quantify average background amplitude vs foreground amplitude across clusters
        - do sequences with the same TFBSs have similar backgrounds?
        - do lower-prediction sequences have lower-prediction overall BG amplitudes?
        - non-uniform scaling of BG for exotic cases:
            - 5870_0: Background amplitude colocalizes around motif hubs. Compare clusters 24-25 with 26-27.
                - Regions of the fixed background become more important depending on the position of motifs

    - Variability logo metric and make box plot (CLIPNET)
    - Redo Fig.2 RHS with SNV and pairwise (cropped mutagenesis)
        - 278,632 maps... poses problem for memory --> need to implement mutation window for CombinatorialMutagenesis
            - cropped mutagenesis (mut_window=[80,210]) brings number down to 77,029
            - then we can say later that pairwise for PIK3R3 was too much
        - Sup fig for covariance matrices (take out of Figure 2)
    - New sup fig from combined Fig. 5 leftovers (AP-1 global, etc.)
    - Table of computation times
    - Library composition schematics


- examples
    - example for figure 1 should also mention all supplementary figures associated with it (Covariance, etc.)
    - add batch_size=5000 to all linkage=cluster.cluster()
    - note that DeepSHAP takes about an hour for 100,000 sequences (DeepSTARR), so other methods used in examples
    - update deepstarr_local.rst to mirror most recent Colab
    - one global example using GIA coloring
    - PCA/K-means version of 'Local library to annotate all TFBSs and biophysical states
    - both:
        - put random seeds on all mut_generators and rerun
        - DeepSTARR 3-way mutation figure reproduced
            - compare to SQUID pairwise
            - repeat all slides from first SCQB presentation
                - all_maps_average_y_adaptive.png / all_maps_average_y_fixed.png
            - need section at end to dynamically understand MSM for a given cluster
        - REVO? BEAM?
        - ChromBPNet
            - Promoter
            - Enhancer with umap?
        - CLIPNET
            - PIK3R3?
        - ProCapNet (Captum?)
            - profiles
            - background
    - local:
        - Replicate global Colabs into Python scripts
        - add adaptive_background_scaling to examples
        - folder name specification: e.g., "kmeans_k200" for 200 clusters
        - DeepSTARR mismatch figure reproduced (index 22612; Dev) with SNVs,DNVs
            - do local first to find background, then run SNV/DNV and remove background?
            - color logos by reference sequence
            - try SmoothGrad?
            - try coarse-grain clustering via thresholding maps?
    - colab:
        - interactive MSM viewer
        - SpliceAI example
        - change one of the examples to use PCA instead of hierarchical?


- plotting:
    - Missing save outputs:
        - all_maps_average_y_adaptive.png / all_maps_average_y_fixed.png


- SQUID:
    - add copies of all colab tutorials (with import versions) to GitHub folder
    - plot_y_hist() in impress.py needs option to set new axvline ref_idx or None
    - handle larger pairwise matrices
    - check why global seed is the only reason x_mut can be preserved
        - add option to input pre-generated x_mut
        - add option to skip inference (y_mut = None) -> is this already in place?


- CLIPNET:
    - Run on PIK3CA: 
        - most commonly mutated proto-oncogene (mutated in 13% of cancers)
        - TERT


Documentation:
    - API figure (use squid as template)
    - Check all readthedocs pages for accuracy
    - https://pypi.org/project/seam-nn/ pictures not loading correctly? also check all text
    - add note to all about use of DeepSHAP in paper vs others for examples
    - add ICLR link to README when available
    - show example kwargs for each attribution method in ReadTheDocs: PCA with plot_eigenvalues, etc.
    - read through and verify API in ReadTheDocs
    - make sure requirements and installation are consistent with setup.py 


- Compiler:
    - SEAM utils calls
    - Move hamming distance calculation to SEAM utils?
    - save output to self.mave
    - docstring check (readthedocs compatibility)
    - discover alphabet from mave.csv and save to self.alphabet
        - e.g., alphabet = sorted(list(set(mave['Sequence'][0:100].apply(list).sum())))
    - mave.to_csv('mave.csv', index=False)
    - remove redundant sequences (in general) and after concat with SNV/DNV; or check if it’s already in the code (or put it there in compile)
    - ensembler() to combine model folds?
    - GIA scores in Compiler


- Attributer:
    - option to use PyTorch / import Captum
    - Methods:
        - ISM: 
            - method to apply ISM only on region of interest
            - error running 100,000 sequences with 16 batch size in global
                - Attribution:   0%|          | 0/6250 [00:00<?, ?it/s]GPU implementation failed with error: {{function_node __wrapped__TensorScatterUpdate_device_/job:localhost/replica:0/task:0/device:GPU:0}} Outer dimensions of indices and update must match. Indices shape: [32,1], updates shape:[1] [Op:TensorScatterUpdate] name: 
            - check if the sequence has been used anywhere else (in any other batch)
            - Batch_size check against memory?
            - once everything is fixed up, check UMAP of global AP1 library
            - tf.experimental.autotune for batches?
        - DeepSHAP
            - add old TF1 version
            - Refactor DeepSHAP code for newer TF versions
            - DeepSHAP for TF2: dinuc_shuffle, etc. in batch mode with GPUs
            - pytorch version?
            - no longer need sequence_utils.py?
            - dinuc shuffling vs training set option
        - IntGrad
            - Plot each map within a given int grad trajectory
            - Test that dinuc_shuffle is able to call the numpy version of batch_dinuc_shuffle
            - baseline_type=None for pre-generated baseline? (e.g., training set)


- Clusterer:
    - implement other methods from cuml.manifold?
        - tsne GPU
        - pca GPU
    - phate GPU?
    - add diffusion maps code
    - reuse DM distance matrix for clustering?
    - add Louvain (or Leiden) clustering
    - hierarchical vs embedding discrepancy:
        - hieararhical doesn't take method as hyperparam: clusterer = Clusterer(attributions,gpu=gpu)
    - Does hierarchical cpu not run out of memory when gpu does? Is the memmap problematic? 


- MetaExplainer:
    - add mutual information plot to explainer?
    - JK: plot KL divergence between cluster and BG (2nd distribution) for coloring MSM?
    - Marginal delta_H to show regions of conservation
    - test plot_cluster_profiles
        - check profile plotting functionality (lines 741-753 from meta_explainer_orig.py)
            - plot individual profiles for each cluster
            - handle alpha blending for overlays
    - test enrichment logos
    - line up the MSM with the logos below them, and with the bar plot to their right (see below)
    - use marginal bar plots on the right side of the MSM figure
    - background_entropy currently only defined for 4 nucleotides; see latex equation
        - currently: background_entropy = entropy([null_rate, (1-null_rate)/3, (1-null_rate)/3, (1-null_rate)/3], base=2)
    - plot_msm() needs xtick_spacing
    - ability to plot a single row (cluster) of MSM, and given a position, view the nucleotide frequencies

- Identifier:
    - code to combine TFBS states based on squares in covariance matrix
        - use more complicated locus: Ohler6-m0-seq171
    - Fisher, Binomial, etc. for SNPs database
    - update readthedocs for Identifier
    - add xtick_spacing to plot_covariance_square
    - background_entropy currently only defined for 4 nucleotides
    - calculate expected effect for each cluster? (change in y-value from WT cluster)
    - fix state matrix bug (multiplier > 1?)

- Logos:
    - inconsistency between figsize and fig_size
        - meta.generate_logos((20, 2.5), ...)
        - BatchLogo(fig_size=[20, 2.5], ...) --> change to figsize, which is the SEAM way.


- Impress:
    - move all plotting code to impress.py?
        - plot_dendrogram
        - minimize other redundancies between functions in identifier.py and clusterer.py
    - add Bokeh plots for colab


- GUI Class:
    - GUI requires 'matplotlib==3.6.0', which is in conflict with scipy dendrogram plot
    - update for latest repository
        - new logomaker (remove old logo versions)
    - if adaptive logos not pre-generated, automatically show fixed
    - PWM bits are not correct (should be max 2, not 4)
    - MSM window: boxplots of y values in margin or separate window
    - P1: if no manifold, n/a plots on P2 and P3
    - Save a page of individual logos to figure from a given cluster (popup window with start/stop option)
    - if no points selected, clear and show warning box
    - P2: “adaptive” and “fixed”
    - P2/P3: statistics window needs correct toolbar readouts
    - P1: “First row”, “consensus”, “custom”, “None”
    - All axes: just show 0,25,50,75,100%
    - Redoing cluster folder on P1 (while hist shown on P2) results in overlapping plots on P2
    - Drop duplicates
    - Put {attribution method} (e.g., DeepSHAP) in all /clusters filenames
    - Box plots for y vs clusters in MSM margin or sub-window
    - P3 logos still vertically squished
    - Disable dark mode
    - Re-assert “Drawing order” after changing “Color Map” on P2
    - Toolbars: save with tight layout
    - Go to WT cluster (i.e., first row of ‘all clusters.csv’)
    - Check accuracy of delta H calculation (error?)
    - Plot_clusters_matches_2d_gui:
        - Impress: delta=True in GUI; alphabet; “r” (mutation rate)
    - GUI marginal window needs “Entropy difference” option
    - P2: button to save indices of encircled points (and print)
    - P2: show occupancy of encircled region in toolbar
    - GUI crash on P3 for UMAP and hierarchical logos
    - Slightly larger black points on P3 of GUI
    - MSM: option to map SEAM coordinates to new number (e.g., chr1:A-B)
    - P3: resize logo as window is made larger
    - Save mismatch table in Marginal Window of GUI; popup window showing location of saved file
    - Option to rank MSM by median y value (if pre-sort is not selected)
    - “Show boxplots” button
    - P3: up and down toggle arrows for “choose cluster”
    - P3: render and save logo on the fly (if missing)
    - Ability to switch between hierarchical cut levels on the fly
    - For public release, make sure all examples have all logos (fixed, etc.)
    - Update P3 UMAP when Custom.plt_step is changed on P2 (needs to update Predef.cluster_colors)
    - New tab to merge clusters and label them (e.g., AP-1, etc)
        - Visualize state vs. TFBS presence graph


- Other:
    - Discussion: 
        - augment libraries with:
            - all SNVs, pairwise, (higher order?)
            - a collection of known population variants
            - indels
            - sliding
        - impute missing values from experimental datasets
    - backup SEAM Colabs on github
    - backup SQUID Colabs on github
    - SEAM remaining figures
    - 'ward' vs other linkages
    - use all_maps_average to prove a point?
    - intgrad zeros vs intgrad dinuc --> same appearance with cluster average?
        - compare to average over all maps in library; smoothGrad comparison, etc.
    - PCA with more dims
    - Hessian or PW vs purely additive
        - or pairwise directly using PBM
    - need to say CREB is 15 flanks; DRE is 10 flanks; AP1 is 10 flanks
    - Other figures:
        - PPIF enhancer (cropped)
            - cropped and hierarchical
            - compare to Enformer (e.g., cl.36 vs cl.186)
                - compare backgrounds
        - compare backgrounds across different attribution methods
        - Fig. 1 schematic example
            - compare to SQUID pairwise
            - compare to average of all maps in library (and smoothgrad)
        - intra-cluster variability logo for highest occupancy cluster
        - SEAM denoised cluster (on saliency) vs all other methods
    - Figure revisions:
        - Illustrator attribution y-axes in Myriad: change to Arial, and add middle notch
    - Run local library just to get out background, then remove from DNVs
    - Choose number of clusters based on the average IQR of median predictions per cluster?
    - Example to show local library finds soft syntax ruled like pairwise + wildcard
    - cite the DREAM paper (same BG over different architectures)
    - reminder that SEAM is on simplex
    - Methods: cpu and gpu optimized
    - Methods: add activity calculation from state matrix (continuous)



- Sharing:
    - Danko Lab
    - Carlos (work on protein dataset)
    - ...


- Future SEAM studies:
	- protein compartments (PLM dataset)
    - Zoopedia evolutionary data
    - Other Stark lab DNN with more output heads
        - show different backgrounds for each task?
    - Try global using genomic locus with dinuc shuffle?
    - ResidualBind example for global? (see old slide)
        - TEAD vs AP-1: check ENCODE profiles for each TF?
    - Global analyis on procapnet examples (recall figure with profiles)
    - embed Hessian and concat with attribution map?
    - Biophysical modeling:
        - DRE-m0-seq601
    - Yagi's data workflow and GUI
    - Motif finding:
        - best attribution method?
        - best num_seqs, mut_rate? (1000 seems sufficient)
        - best cut_level?
            - attribution clusters
            - TFBS clusters
        - poised?
    - evolutionary graph
    - automating across genome:
        - increase cut level until no zero-entropy rows in MSM


- Zenodo:
    - update colab downloads
    - add all downloaded files:
        - Zfp187_2626_contig8mers.txt
        - Hnf4...
        - x_mut and y_mut for PBMs
        - AP1 genomic loci


- Commands:
    - upload to pypi:
        python -m build
        twine upload --skip-existing dist/*